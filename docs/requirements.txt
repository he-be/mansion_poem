マンションポエマー Webプロトタイプ 要求仕様書
1. プロジェクト概要
1.1. 目的
本ドキュメントは、体験型ゲーム「マンションポエマー」のコアメカニクスを検証するためのWebアプリケーションプロトタイプの要求仕様を定義する。
目的は、物理的なインスタレーションを制作する前に、ゲームの流れ、カード選択の面白さ、ポエム生成のロジックがユーザーにとって魅力的であるかを確認することにある。

1.2. スコープ
本プロトタイプのスコープは以下の通りとする。

対象機能: ゲーム開始から、カード選択、ルールベースでのポエム（チラシ）生成、リプレイまでの一連のフロー。

対象外: ユーザーアカウント機能、スコアリング、サーバーへのデータ保存、高度なアニメーション、印刷機能。

2. 技術スタック（前提）
ビルドツール: Vite

言語: TypeScript

UIライブラリ/フレームワーク: Vue

動作環境: 主要なモダンブラウザ（PC/スマートフォン）

インフラ: Cloudflare Pages等の静的サイトホスティング（サーバーサイド処理はなし）

LLM統合: Google Gemini Flash (gemini-flash-latest) - 最終ポエム生成用

3. ユーザーストーリー (MVP: Minimum Viable Product)
Epic: プレイヤーとしてマンションポエムを完成させ、そのユニークな結果を楽しみたい
US-01: ゲームを開始する
As a プレイヤー,
I want to トップページで明確な開始ボタンをクリックしてゲームを始めたい,
so that 迷うことなくすぐに体験を開始できる。

受け入れ条件:

アプリにアクセスすると、ゲームのタイトルと「創造を開始する」などの開始ボタンが表示されている。

開始ボタンをクリックすると、カード選択画面（US-02）に遷移する。

US-02: ランダムな「現実」と向き合う
As a プレイヤー,
I want to ゲームが始まると、ランダムに5枚の「条件カード」が自動で配られてほしい,
so that 毎回異なる「ままならない現実」から始まるという、ゲームのコンセプトを体験できる。

受け入れ条件:

ゲーム開始後、定義済みカードデータの中からランダムに5枚の「条件カード」が選択される。

選択された5枚のカードが、画面下部の「手札」エリアに表示される。

各カードには、そのネガティブ/ポジティブな条件がテキストで明記されている。

US-03: 「言い訳」を自ら選び取る
As a プレイヤー,
I want to 手札の「条件カード」を1枚クリックすると、それに対応する複数の「ポエムカード（言い訳）」の選択肢が表示されてほしい,
so that どの言い換えが最も面白いか、自分の感性で選ぶ楽しみを味わえる。

受け入れ条件:

手札の「条件カード」をクリックすると、モーダルウィンドウやポップアップで3つ程度の「ポエムカード」候補が表示される。

表示された「ポエムカード」の中から1枚をクリックして選択できる。

選択が完了すると、手札の「条件カード」に使用済みであることがわかる印（例: 色が変わる、チェックマークが付く）が表示される。

プレイヤーは5枚すべての「条件カード」に対して、対応する「ポエムカード」を選択する。

US-04: 完成した「チラシ」を閲覧する
As a プレイヤー,
I want to 5枚すべてのカードの組み合わせを選択し終えたら、完成した「チラシ」を閲覧したい,
so that 自分の選択がどのようなユニークな物語（ポエム）を生み出したのか、その結果を確認できる。

受け入れ条件:

5組のカードペアが完成すると、「チラシを生成する」ボタンがクリック可能になる。

ボタンをクリックすると、LLMによるポエム生成処理が実行される（ローディング表示）。

生成完了後、結果表示画面に遷移する。

結果画面はチラシ風のデザインで、以下の要素が含まれている。

自動生成されたキャッチーなタイトル（例: 「天空の静寂を掌中に収める、天空邸宅。」など、選ばれたカードの中から最も強いものが採用されるロジック）。

プレイヤーが選んだ5組の「条件（現実）」と「ポエム（言い訳）」の対比リスト。

LLM（Gemini Flash）によって生成された、選択内容を元にした新たな詩的なマンションポエム（本文）。

「世界は、あなたの言葉で完成する。」のような、固定の締めの一文。

US-05: 新たな創造を始める
As a プレイヤー,
I want to チラシを閲覧した後、簡単に最初からやり直せるボタンがほしい,
so that 異なるカードの組み合わせで、何度も繰り返しゲームを楽しめる。

受け入れ条件:

結果画面に「もう一度創造する」ボタンが存在する。

ボタンをクリックすると、トップページ（US-01）に戻り、新しいゲームを開始できる状態になる。

4. データ構造（カード定義）
カードデータは、クライアントサイドで管理可能なJSON形式の配列とする。

データソース: docs/card_1007.txtのカード定義を元に、すべてのカテゴリ（交通アクセス、周辺環境、建物・デザイン、共用設備、室内・仕様、ライフスタイル・コンセプト）のカードを含める。

例: cards.json

[
  {
    "id": "condition-01",
    "category": "交通アクセス",
    "condition_text": "駅徒歩15分",
    "poems": [
      { "id": "poem-01-a", "poem_text": "都心と程よい距離を保つ、静寂の丘。" }
    ]
  },
  {
    "id": "condition-02",
    "category": "周辺環境",
    "condition_text": "周辺に商業施設が少ない",
    "poems": [
      { "id": "poem-02-a", "poem_text": "飾らない。だが、すべてがある。" }
    ]
  },
  {
    "id": "condition-03",
    "category": "建物・デザイン",
    "condition_text": "タワーマンション",
    "poems": [
      { "id": "poem-03-a", "poem_text": "天空の静寂を掌中に収める、天空邸宅。" }
    ]
  }
]

注: 完全なカードデータは、card_1007.txtに記載された全カードをプログラマティックに変換して生成する。

5. LLMによる最終ポエム生成

5.1. 使用モデル
モデル: gemini-flash-latest（Google Gemini Flash）

制約: このモデル以外の使用は禁止

5.2. 生成タイミング
プレイヤーが5枚すべてのカードペアを選択完了後、「チラシを生成する」ボタンをクリックした時点で、LLMによる最終ポエム生成を実行する。

5.3. 生成内容
入力: プレイヤーが選択した5組の「条件カード」と「ポエムカード」の組み合わせ

出力: それらの組み合わせを元にした、新たなマンションポエム（チラシ本文）

5.4. プロンプト設計
以下の要素を含むプロンプトを使用する:

選択されたカードペアのリスト（条件とポエムの対比）

不動産チラシの文体・トーンの指示

生成するポエムの文字数目安（200〜400文字程度）

マンションの魅力を詩的に表現するよう指示

例:
「以下の条件とポエムの組み合わせから、魅力的なマンションのチラシ本文を生成してください。
条件1: 駅徒歩15分 → 都心と程よい距離を保つ、静寂の丘。
条件2: ...
文体は詩的で格調高く、不動産広告らしい言い回しを使用してください。200〜400文字程度で記述してください。」

5.5. エラーハンドリング
API呼び出し失敗時: ユーザーにエラーメッセージを表示し、リトライボタンを提供

生成テキストが不適切な場合: 代替テキスト（デフォルトメッセージ）を表示

5.6. APIキー管理
環境変数（.env）でAPIキーを管理

リポジトリにAPIキーを含めない（.gitignoreに.envを追加）
